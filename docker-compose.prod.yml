version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-erp}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app} -d ${POSTGRES_DB:-erp}"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://0.0.0.0:8080
      ConnectionStrings__DefaultConnection: Host=db;Port=5432;Database=${POSTGRES_DB:-erp};Username=${POSTGRES_USER:-app};Password=${POSTGRES_PASSWORD}
      Jwt__Key: ${JWT_KEY}
      Jwt__Issuer: erp-api
      Jwt__Audience: erp-api-users
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "80:8080"   # expose API on port 80 (HTTP)
    restart: unless-stopped

volumes:
  pgdata: